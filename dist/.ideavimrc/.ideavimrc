"" Source your .vimrc
"source ~/.vimrc
let mapleader=" "
"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)
set number relativenumber
set clipboard^=unnamed,unnamedplus
"set sysoption for vim "
set cursorline

"===================Plugin Start=================="
"NERDTree"

" Find more examples here: https://jb.gg/share-ideavimrc
set keep-english-in-normal
set keep-english-in-normal-and-restore-in-insert
set sneak
set quickscope
set surround

set multiple-cursors

set commentary
"argtextobj"
set argtextobj
let g:argtextobj_pairs="[:],(:),<:>"
"yank higlight"
Plug 'machakann/vim-highlightedyank'

"easymotion"
Plug 'easymotion/vim-easymotion'
set easymotion
"surround"
set surround
" showmode
set showmode
" set signature
set signature
"auto Join"
set ideajoin
set ideastatusicon=gray
"Idea Paste
set ideaput
" Remap multiple-cursors shortcuts to match terryma/vim-multiple-cursors
set multiple-cursors
" matchit
Plug 'vim-matchit'
Plug 'chrisbra/matchit'
set matchit
" exchange
Plugin 'tommcdo/vim-exchange'
Plug 'https://github.com/tommcdo/vim-exchange'
Plug 'vim-exchange'
set exchange
"===================Plugin End=================="

nmap <C-n> <Plug>NextWholeOccurrence
xmap <C-n> <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
nmap <C-x> <Plug>SkipOccurrence
xmap <C-x> <Plug>SkipOccurrence
nmap <C-p> <Plug>RemoveOccurrence
xmap <C-p> <Plug>RemoveOccurrence
nmap <C-A-Down> :action EditorCloneCaretBelow<CR>
nmap <C-A-Up> :action EditorCloneCaretAbove<CR>

"Map Ke"
nnoremap <leader>re :action RenameElement<CR>
nnoremap <leader>cr :action CopyReference<CR>
nnoremap <leader>gi :action GotoImplementation<CR>
nnoremap <leader>gne :action GotoNextError<CR>
nnoremap <leader>tlb :action ToggleLineBreakpoint<CR>
nnoremap <leader>fsp :action FileStructurePopup<CR>
nnoremap <leader>als :actionlist<CR>
" Toggle case and start typing. E.g. `<leader>iget`: `property` -> `getProperty`
map <leader>i ~hi
" Remove selection and toggle case. E.g. `v2l<leader>u`: `getProperty` -> `property`
vmap <leader>u d~h
